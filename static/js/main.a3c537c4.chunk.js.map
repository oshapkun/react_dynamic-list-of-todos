{"version":3,"sources":["api.ts","StoreApp.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","filterTodos","todos","filter","searchTerm","todo","matchesSearch","title","toLowerCase","includes","All","Active","completed","appReducer","state","action","type","loading","payload","filteredTodos","users","user","isModalOpen","modalLoading","initialAppState","isUserLoading","AppContext","React","createContext","setLoading","setFilter","setTodos","setTodoModal","setUsers","setUserModal","setSearchedTodos","clearSearchTerm","getUserForTodo","openModal","closeModal","openModalForTodo","useAppContext","useContext","AppProvider","children","useReducer","dispatch","todoId","userId","selectedTodo","find","id","catch","useEffect","Provider","value","TodoItem","memo","handleOpenModalBtn","useCallback","map","className","classNames","onClick","TodoList","TodoFilter","statusOptions","Completed","onChange","event","status","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","TodoApp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3c537c4.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useReducer } from 'react';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ninterface AppState {\n  loading: boolean;\n  todos: Todo[];\n  todo: Todo;\n  users: User[];\n  user: User;\n  filter: Status;\n  filteredTodos: Todo[];\n  searchTerm: string;\n  isModalOpen: boolean;\n  modalLoading: boolean;\n  isUserLoading: boolean;\n}\n\ninterface AppContextType extends AppState {\n  setLoading: (loading: boolean) => void;\n  setFilter: (filter: Status) => void;\n  setTodos: (todos: Todo[]) => void;\n  setTodoModal: (todo: Todo) => void;\n  setUsers: (users: User[]) => void;\n  setUserModal: (user: User) => void;\n  setSearchedTodos: (searchTerm: string) => void;\n  clearSearchTerm: () => void;\n  getUserForTodo: (todoId: number) => void;\n  openModal: () => void;\n  closeModal: () => void;\n  openModalForTodo: (todoId: number) => void;\n}\n\ntype Action = { type: 'set_loading'; payload: boolean }\n| { type: 'set_todos'; payload: Todo[] }\n| { type: 'set_todo_modal'; payload: Todo }\n| { type: 'set_users'; payload: User[] }\n| { type: 'set_user_modal'; payload: User }\n| { type: 'set_filter'; payload: Status }\n| { type: 'set_filtered_todos'; payload: Todo[] }\n| { type: 'set_search_term'; payload: string }\n| { type: 'clear_search_term' }\n| { type: 'open_modal' }\n| { type: 'close_modal' }\n| { type: 'set_modal_loading'; payload: boolean };\n\nconst filterTodos = (\n  todos: Todo[],\n  filter: Status,\n  searchTerm: string,\n): Todo[] => {\n  return todos.filter(todo => {\n    const matchesSearch = todo.title.toLowerCase()\n      .includes(searchTerm.toLowerCase());\n\n    if (filter === Status.All) {\n      return matchesSearch;\n    }\n\n    if (filter === Status.Active) {\n      return !todo.completed && matchesSearch;\n    }\n\n    return todo.completed && matchesSearch;\n  });\n};\n\nconst appReducer = (state: AppState, action: Action): AppState => {\n  switch (action.type) {\n    case 'set_loading':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    case 'set_todos':\n      return {\n        ...state,\n        todos: action.payload,\n        filteredTodos: filterTodos(\n          action.payload,\n          state.filter,\n          state.searchTerm,\n        ),\n      };\n\n    case 'set_todo_modal':\n      return {\n        ...state,\n        todo: action.payload,\n      };\n\n    case 'set_users':\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case 'set_user_modal':\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case 'set_filter':\n      return {\n        ...state,\n        filter: action.payload,\n        filteredTodos: filterTodos(\n          state.todos,\n          action.payload,\n          state.searchTerm,\n        ),\n      };\n\n    case 'set_filtered_todos':\n      return {\n        ...state,\n        filteredTodos: action.payload,\n      };\n\n    case 'set_search_term':\n      return {\n        ...state,\n        searchTerm: action.payload,\n        filteredTodos: filterTodos(\n          state.todos,\n          state.filter,\n          action.payload,\n        ),\n      };\n\n    case 'clear_search_term':\n      return {\n        ...state,\n        searchTerm: '',\n        filter: Status.All,\n        filteredTodos: filterTodos(\n          state.todos,\n          Status.All,\n          '',\n        ),\n      };\n\n    case 'open_modal':\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n\n    case 'close_modal':\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case 'set_modal_loading':\n      return {\n        ...state,\n        modalLoading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialAppState: AppState = {\n  loading: false,\n  todos: [],\n  todo: {} as Todo,\n  users: [],\n  user: {} as User,\n  filter: Status.All,\n  filteredTodos: [],\n  searchTerm: '',\n  isModalOpen: false,\n  modalLoading: false,\n  isUserLoading: false,\n};\n\nconst AppContext = React.createContext<AppContextType>({\n  ...initialAppState,\n  setLoading: () => {},\n  setFilter: () => {},\n  setTodos: () => {},\n  setTodoModal: () => {},\n  setUsers: () => {},\n  setUserModal: () => {},\n  setSearchedTodos: () => {},\n  clearSearchTerm: () => {},\n  getUserForTodo: () => {},\n  openModal: () => {},\n  closeModal: () => {},\n  openModalForTodo: () => {},\n});\n\nexport const useAppContext = () => useContext(AppContext);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AppProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialAppState);\n\n  const setLoading = (loading: boolean) => {\n    dispatch({ type: 'set_loading', payload: loading });\n  };\n\n  const setTodos = (todos: Todo[]) => {\n    dispatch({ type: 'set_todos', payload: todos });\n  };\n\n  const setTodoModal = (todo: Todo) => {\n    dispatch({ type: 'set_todo_modal', payload: todo });\n  };\n\n  const setUsers = (users: User[]) => {\n    dispatch({ type: 'set_users', payload: users });\n  };\n\n  const setUserModal = (user: User) => {\n    dispatch({ type: 'set_user_modal', payload: user });\n  };\n\n  const setFilter = (filter: Status) => {\n    dispatch({ type: 'set_filter', payload: filter });\n  };\n\n  const setSearchedTodos = (searchTerm: string) => {\n    dispatch({ type: 'set_search_term', payload: searchTerm });\n  };\n\n  const clearSearchTerm = () => {\n    dispatch({ type: 'clear_search_term' });\n  };\n\n  const openModal = () => {\n    dispatch({ type: 'open_modal' });\n  };\n\n  const closeModal = () => {\n    dispatch({ type: 'close_modal' });\n  };\n\n  const getUserForTodo = (todoId: number) => {\n    const selectedTodo = state.todos.find(todo => todo.id === todoId);\n\n    if (selectedTodo) {\n      setLoading(true);\n\n      getUser(selectedTodo.userId)\n        .then(user => {\n          setUsers([user]);\n          setUserModal(user);\n          setTodoModal(selectedTodo);\n          setLoading(false);\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  const openModalForTodo = (todoId: number) => {\n    getUserForTodo(todoId);\n    openModal();\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(todos => {\n        setTodos(todos);\n        setLoading(false);\n      })\n      .catch(() => setLoading(false));\n  }, []);\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...state,\n        setLoading,\n        setTodos,\n        setUsers,\n        setUserModal,\n        setFilter,\n        setSearchedTodos,\n        clearSearchTerm,\n        getUserForTodo,\n        openModal,\n        closeModal,\n        setTodoModal,\n        openModalForTodo,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useAppContext } from '../../StoreApp';\n\nexport const TodoItem: React.FC = React.memo(() => {\n  const {\n    filteredTodos,\n    isModalOpen,\n    openModalForTodo,\n  } = useAppContext();\n\n  const handleOpenModalBtn = useCallback(\n    (todoId) => {\n      openModalForTodo(todoId);\n    },\n    [openModalForTodo],\n  );\n\n  return (\n    <tbody>\n      {filteredTodos.map((todo) => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {!isModalOpen && (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleOpenModalBtn(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  );\n});\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList: React.FC = () => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <TodoItem />\n    </table>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { Status, useAppContext } from '../../StoreApp';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    filter,\n    setFilter,\n    setSearchedTodos,\n    searchTerm,\n    clearSearchTerm,\n  } = useAppContext();\n\n  const handleFilterChange = (status: Status) => {\n    setFilter(status);\n  };\n\n  const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchedTodos(event.target.value);\n  };\n\n  const handleClearSearch = () => {\n    clearSearchTerm();\n  };\n\n  const statusOptions = [Status.All, Status.Active, Status.Completed];\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => handleFilterChange(\n              event.target.value as Status,\n            )}\n          >\n            {statusOptions.map(status => (\n              <option\n                key={status}\n                value={status}\n              >\n                {status}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchTerm && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useAppContext } from '../../StoreApp';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    closeModal, todo, user, loading,\n  } = useAppContext();\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n                {' by '}\n                <a href={`mailto:${user.email}`}>{user.name}</a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { TodoList } from '../TodoList';\nimport { TodoFilter } from '../TodoFilter';\nimport { Loader } from '../Loader';\nimport { TodoModal } from '../TodoModal';\nimport { useAppContext } from '../../StoreApp';\n\nexport const TodoApp: React.FC = () => {\n  const { loading, isModalOpen } = useAppContext();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">{!loading && <TodoFilter />}</div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {!loading && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && <TodoModal />}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { AppProvider } from './StoreApp';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <AppProvider>\n      <TodoApp />\n    </AppProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}